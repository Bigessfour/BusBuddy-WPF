<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
                    xmlns:syncfusionskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF">

    <!-- =============================================================================== -->
    <!-- BUS BUDDY CUSTOM STYLES — SYNCFUSION FLUENTDARK THEME IMPLEMENTATION -->
    <!-- =============================================================================== -->
    <!-- These custom styles are designed to work with the FluentDark theme -->
    <!-- applied via SfSkinManager.ApplicationTheme in App.xaml.cs -->
    <!-- =============================================================================== -->

    <!-- Merge FluentDark theme resources for proper palette access -->
    <!-- Note: These resource dictionaries are merged automatically by SfSkinManager -->
    <!-- We provide fallback styles and resources below -->
    <ResourceDictionary.MergedDictionaries>
        <!-- Theme resources are automatically applied via SfSkinManager.ApplicationTheme -->
    </ResourceDictionary.MergedDictionaries>

    <!-- BusBuddyDockingManagerStyle — Minimal style with only essential properties -->
    <Style x:Key="BusBuddyDockingManagerStyle" TargetType="{x:Type syncfusion:DockingManager}">
        <!-- Only include properties that are definitely available on DockingManager -->
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}" />
        <!-- Additional properties can be added here once we verify they exist -->
    </Style>

    <!-- Dashboard tile style using FluentDark palette -->
    <Style x:Key="BusBuddyDashboardTileStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="16" />
        <Setter Property="Margin" Value="8" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Secondary button style using FluentDark palette -->
    <Style x:Key="BusBuddySecondaryButtonStyle" TargetType="{x:Type syncfusion:ButtonAdv}">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="12,8" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource PressedBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Enhanced Button Style using FluentDark palette -->
    <Style x:Key="BusBuddyButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource AccentBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="12,8" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentMouseOverBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentPressedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Fallback brushes for FluentDark theme palette -->
    <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="#1E1E1E" />
    <SolidColorBrush x:Key="PrimaryForegroundBrush" Color="#FFFFFF" />
    <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="#2D2D30" />
    <SolidColorBrush x:Key="SecondaryForegroundBrush" Color="#CCCCCC" />
    <SolidColorBrush x:Key="AccentBackgroundBrush" Color="#0078D4" />
    <SolidColorBrush x:Key="AccentForegroundBrush" Color="#FFFFFF" />
    <SolidColorBrush x:Key="AccentMouseOverBackgroundBrush" Color="#106EBE" />
    <SolidColorBrush x:Key="AccentMouseOverBorderBrush" Color="#005A9E" />
    <SolidColorBrush x:Key="AccentPressedBackgroundBrush" Color="#005A9E" />
    <SolidColorBrush x:Key="BorderBrush" Color="#323130" />
    <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#2D2D30" />
    <SolidColorBrush x:Key="PressedBackgroundBrush" Color="#252526" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#3C3C3C" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#666666" />
    <SolidColorBrush x:Key="SuccessBrush" Color="#107C10" />
    <SolidColorBrush x:Key="WarningBrush" Color="#FF8C00" />
    <SolidColorBrush x:Key="ErrorBrush" Color="#E74856" />
    <SolidColorBrush x:Key="InfoBrush" Color="#0078D4" />
    <SolidColorBrush x:Key="PurpleBrush" Color="#8B5CF6" />

    <!-- Colors for gradients -->
    <Color x:Key="PrimaryColor">#0078D4</Color>
    <Color x:Key="AccentColor">#106EBE</Color>

</ResourceDictionary>
