<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:syncfusionskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF">

    <!--
    ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
    🎨 BUS BUDDY CUSTOM FLUENTDARK THEME OVERRIDES
    ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
    ✅ PURPOSE: Override Syncfusion FluentDark theme resources for consistent Bus Buddy branding
    ✅ SCOPE: Only contains customizations to default Syncfusion theme resources
    ✅ USAGE: These overrides are applied after the base FluentDark theme from Syncfusion
    ══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
    -->

    <!-- Base Colors -->
    <SolidColorBrush x:Key="ContentForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="SurfaceBackground" Color="#1F1F1F" />
    <SolidColorBrush x:Key="SurfaceBorderBrush" Color="#444444" />
    <SolidColorBrush x:Key="ProfessionalSurfaceDark" Color="#2A2A2A" />

    <!-- Brand Colors -->
    <SolidColorBrush x:Key="BrandPrimaryBrush" Color="#3A86FF" />
    <SolidColorBrush x:Key="BrandSecondaryBrush" Color="#8338EC" />
    <SolidColorBrush x:Key="BrandFleetGreenBrush" Color="#38B000" />
    <SolidColorBrush x:Key="BrandWarningBrush" Color="#FF9F1C" />
    <SolidColorBrush x:Key="BrandAlertBrush" Color="#FF0A54" />

    <!-- Button Styles -->
    <Style x:Key="NavigationItemStyle" TargetType="syncfusion:ButtonAdv">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ContentForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="16,12" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ProfessionalSurfaceDark}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BrandPrimaryBrush}" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconButtonAdvStyle" TargetType="syncfusion:ButtonAdv">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ProfessionalSurfaceDark}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ComboBox Style -->
    <Style x:Key="StandardComboBoxStyle" TargetType="syncfusion:ComboBoxAdv">
        <Setter Property="Background" Value="{DynamicResource ProfessionalSurfaceDark}" />
        <Setter Property="Foreground" Value="{DynamicResource ContentForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!-- ╔═══════════════════════════════════════════════════════════════════════════════════════╗ -->
    <!-- ║                                    DOCKING MANAGER STANDARDIZATION                     ║ -->
    <!-- ║   Enhanced with TDI mode, size enforcement, and state persistence management           ║ -->
    <!-- ║   • UseDocumentContainer=True for consistent TDI (Tabbed Document Interface) mode     ║ -->
    <!-- ║   • PersistState=True with size limits for performance                                 ║ -->
    <!-- ║   • ContainerMode=TDI and DockBehavior=VS2010 for professional IDE experience        ║ -->
    <!-- ║   • Standard sizing enforced via DesiredWidthInDockedMode/DesiredHeightInDockedMode   ║ -->
    <!-- ╚═══════════════════════════════════════════════════════════════════════════════════════╝ -->
    <Style x:Key="StandardDockingManagerStyle" TargetType="syncfusion:DockingManager">
        <Setter Property="Background" Value="{DynamicResource SurfaceBackground}" />
        <Setter Property="UseDocumentContainer" Value="True" />
        <Setter Property="PersistState" Value="True" />
        <Setter Property="ContainerMode" Value="TDI" />
        <Setter Property="DockBehavior" Value="VS2010" />
        <Setter Property="DockFill" Value="True" />
        <Setter Property="EnableAutoAdjustment" Value="True" />
        <Setter Property="ShowTabItemsInTitleBar" Value="True" />
        <!-- Performance optimization: Limit state persistence size to prevent load delays -->
        <Setter Property="PersistState" Value="True" />
        <!-- Consistent panel sizing defaults -->
        <Style.Resources>
            <!-- Default panel sizes that can be overridden per panel -->
            <x:Double x:Key="StandardSidePanelWidth">300</x:Double>
            <x:Double x:Key="StandardBottomPanelHeight">200</x:Double>
            <x:Double x:Key="StandardTopPanelHeight">64</x:Double>
            <x:Double x:Key="MinimumPanelWidth">200</x:Double>
            <x:Double x:Key="MinimumPanelHeight">150</x:Double>
        </Style.Resources>
    </Style>

    <!-- NavigationDrawer Style -->
    <Style x:Key="StandardNavigationDrawerStyle" TargetType="syncfusion:SfNavigationDrawer">
        <Setter Property="Background" Value="{DynamicResource SurfaceBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ContentForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SurfaceBorderBrush}" />
    </Style>

    <!-- CircularProgressBar Style -->
    <Style x:Key="CircularProgressStyle" TargetType="syncfusion:SfCircularProgressBar">
        <Setter Property="TrackColor" Value="#444444" />
        <Setter Property="ProgressColor" Value="{DynamicResource BrandFleetGreenBrush}" />
        <!-- RangeColor property not found on SfCircularProgressBar -->
    </Style>

    <!-- Loading Indicator Style -->
    <Style x:Key="LoadingIndicatorStyle" TargetType="syncfusion:SfBusyIndicator">
        <Setter Property="Background" Value="{DynamicResource SurfaceBackground}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="AnimationType" Value="Gear" />
    </Style>

    <!-- Custom Busy Indicator Style -->
    <Style x:Key="CustomBusyStyle" TargetType="syncfusion:SfBusyIndicator">
        <Setter Property="AnimationType" Value="Gear" />
        <Setter Property="Background" Value="{DynamicResource SurfaceBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ContentForeground}" />
    </Style>

</ResourceDictionary>
