<Application x:Class="BusBuddy.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BusBuddy.WPF"
             xmlns:converters="clr-namespace:BusBuddy.WPF.Converters"
             xmlns:views="clr-namespace:BusBuddy.WPF.Views"
             xmlns:bus="clr-namespace:BusBuddy.WPF.Views.Bus"
             xmlns:dashboard="clr-namespace:BusBuddy.WPF.Views.Dashboard"
             xmlns:route="clr-namespace:BusBuddy.WPF.Views.Route"
             xmlns:driver="clr-namespace:BusBuddy.WPF.Views.Driver"
             xmlns:schedule="clr-namespace:BusBuddy.WPF.Views.Schedule"
             xmlns:viewModels="clr-namespace:BusBuddy.WPF.ViewModels"
             xmlns:student="clr-namespace:BusBuddy.WPF.Views.Student"
             xmlns:fuel="clr-namespace:BusBuddy.WPF.Views.Fuel"
             xmlns:activity="clr-namespace:BusBuddy.WPF.Views.Activity"
             xmlns:maintenance="clr-namespace:BusBuddy.WPF.Views.Maintenance"
             xmlns:settings="clr-namespace:BusBuddy.WPF.Views.Settings"
             xmlns:scheduleViewModels="clr-namespace:BusBuddy.WPF.ViewModels.Schedule"
             xmlns:scheduleManagementViewModels="clr-namespace:BusBuddy.WPF.ViewModels.ScheduleManagement">
    <Application.Resources>
        <ResourceDictionary>
            <!--
            ===============================================================================
            SYNCFUSION FLUENTDARK THEME — PRIMARY WITH COMPREHENSIVE GLOBAL RESOURCES
            ===============================================================================
            Theme is applied via SfSkinManager.ApplicationTheme in App.xaml.cs
            — Primary Theme: FluentDark (official Syncfusion dark theme)
            — Advanced Features: RevealEffects, Animations, Ripple Effects
            This loads the official Syncfusion theme resources automatically

            IMPORTANT: All views must use FluentDark theme consistently by default
            ===============================================================================
            -->

            <ResourceDictionary.MergedDictionaries>
                <!-- Syncfusion FluentDark theme resources (loaded automatically by SfSkinManager) -->
                <!-- FluentLight theme also available for switching -->
                <!-- Phase 2: Syncfusion Base Resources for standardized patterns -->
                <ResourceDictionary Source="Resources/Themes/SyncfusionBaseResources.xaml" />
                <!-- Custom styles that use official Syncfusion FluentDark resource names -->
                <ResourceDictionary Source="Resources/Themes/CustomStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- GLOBAL CONVERTERS -->
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityInverseConverter" IsInverted="True" />

            <!-- GLOBAL STYLES FOR ENHANCED CONTROLS -->
            <Style x:Key="EnhancedNavigationDrawerStyle" TargetType="ContentControl">
                <Setter Property="Background" Value="{DynamicResource SurfaceBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
            </Style>

            <Style x:Key="EnhancedContentControlStyle" TargetType="ContentControl">
                <Setter Property="Background" Value="{DynamicResource SurfaceBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
            </Style>

            <!--
            ===============================================================================
            THEME USAGE GUIDELINES
            ===============================================================================
            Each control should have: syncfusionskin:SfSkinManager.VisualStyle="FluentDark"
            Theme switching is available via ThemeService.ToggleTheme()
            ===============================================================================
            -->

            <!-- ===============================================================================
            VIEWMODEL TO VIEW MAPPING — MVVM PATTERN IMPLEMENTATION
            ===============================================================================
            DataTemplates that map ViewModels to their corresponding Views
            This enables proper MVVM view rendering instead of displaying ViewModel type names
            =============================================================================== -->
            <DataTemplate DataType="{x:Type viewModels:LoadingViewModel}">
                <views:LoadingView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:DashboardViewModel}">
                <dashboard:EnhancedDashboardView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:BusManagementViewModel}">
                <bus:BusManagementView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:DriverManagementViewModel}">
                <driver:DriverManagementView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:RouteManagementViewModel}">
                <route:RouteManagementView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type scheduleViewModels:ScheduleManagementViewModel}">
                <schedule:ScheduleManagementView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type scheduleManagementViewModels:ScheduleViewModel}">
                <schedule:ScheduleView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:StudentManagementViewModel}">
                <student:StudentManagementView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:MaintenanceTrackingViewModel}">
                <maintenance:MaintenanceTrackingView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:FuelManagementViewModel}">
                <fuel:FuelManagementView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:ActivityLogViewModel}">
                <activity:ActivityLoggingView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:SettingsViewModel}">
                <settings:SettingsView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewModels:StudentListViewModel}">
                <views:StudentListView />
            </DataTemplate>

            <!-- Essential converters only - minimal resource dictionary -->
            <converters:NullToBoolConverter x:Key="NullToBoolConverter"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <converters:BooleanToDeprecatedForegroundConverter x:Key="BooleanToDeprecatedForegroundConverter"/>
            <converters:ThemeTextConverter x:Key="ThemeTextConverter"/>

            <!-- Missing Inverse Converter - Critical Fix -->
            <!-- <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityInverseConverter2" IsInverted="True"/> -->

            <!-- Status and Data Converters -->
            <converters:ActiveStatusToColorConverter x:Key="ActiveStatusToColorConverter"/>
            <converters:ActiveStatusToTextConverter x:Key="ActiveStatusToTextConverter"/>
            <converters:EfficiencyToColorConverter x:Key="EfficiencyToColorConverter"/>
            <converters:LicenseStatusToColorConverter x:Key="LicenseStatusToColorConverter"/>
            <converters:StatusToColorConverter x:Key="StatusToColorConverter"/>
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <converters:AvailabilityToColorConverter x:Key="AvailabilityToColorConverter"/>
            <converters:LicenseExpiredConverter x:Key="LicenseExpiredConverter"/>
            <converters:LicenseExpiringSoonConverter x:Key="LicenseExpiringSoonConverter"/>
            <converters:DaysRemainingToColorConverter x:Key="DaysRemainingToColorConverter"/>

            <!-- Additional converters commonly used in views -->
            <converters:ScheduleStatusToColorConverter x:Key="ScheduleStatusToColorConverter"/>

            <!-- CRITICAL: Add missing converters to prevent local definitions -->
            <converters:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter"/>
            <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>

            <!-- Standard WPF converters as global resources -->
            <!-- Already defined above: <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/> -->
        </ResourceDictionary>
    </Application.Resources>
</Application>
