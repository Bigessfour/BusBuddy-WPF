// <auto-generated />
using System;
using BusBuddy.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bus_Buddy.Migrations
{
    [DbContext(typeof(BusBuddyDbContext))]
    [Migration("20250703120139_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bus_Buddy.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<int?>("EndOdometer")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int?>("StartOdometer")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<int?>("StudentsCount")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.HasIndex("DriverId");

                    b.HasIndex("RouteId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Activity", (string)null);
                });

            modelBuilder.Entity("Bus_Buddy.Models.Bus", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("CurrentOdometer")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateLastInspection")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InsuranceExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsurancePolicyNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("SeatingCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VINNumber")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("BusNumber")
                        .IsUnique();

                    b.HasIndex("VINNumber")
                        .IsUnique();

                    b.ToTable("Vehicles", (string)null);

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            BusNumber = "001",
                            LicenseNumber = "TX123456",
                            Make = "Blue Bird",
                            Model = "Vision",
                            PurchaseDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 85000.00m,
                            SeatingCapacity = 72,
                            Status = "Active",
                            VINNumber = "1BAANKCL7LF123456",
                            Year = 2020
                        },
                        new
                        {
                            VehicleId = 2,
                            BusNumber = "002",
                            LicenseNumber = "TX654321",
                            Make = "Thomas Built",
                            Model = "Saf-T-Liner C2",
                            PurchaseDate = new DateTime(2019, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 82000.00m,
                            SeatingCapacity = 66,
                            Status = "Active",
                            VINNumber = "4DRBTAAN7KB654321",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("Bus_Buddy.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DriverPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DriversLicenceType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<bool>("TrainingComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("DriverId");

                    b.ToTable("Drivers", (string)null);

                    b.HasData(
                        new
                        {
                            DriverId = 1,
                            DriverEmail = "john.smith@school.edu",
                            DriverName = "John Smith",
                            DriverPhone = "555-0123",
                            DriversLicenceType = "CDL",
                            TrainingComplete = true
                        },
                        new
                        {
                            DriverId = 2,
                            DriverEmail = "mary.johnson@school.edu",
                            DriverName = "Mary Johnson",
                            DriverPhone = "555-0456",
                            DriversLicenceType = "CDL",
                            TrainingComplete = true
                        });
                });

            modelBuilder.Entity("Bus_Buddy.Models.Fuel", b =>
                {
                    b.Property<int>("FuelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuelId"));

                    b.Property<DateTime>("FuelDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FuelStation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Gallons")
                        .HasColumnType("decimal(8,3)");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MilesPerGallon")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("OdometerReading")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerGallon")
                        .HasColumnType("decimal(8,3)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("FuelId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Fuel", (string)null);
                });

            modelBuilder.Entity("Bus_Buddy.Models.Maintenance", b =>
                {
                    b.Property<int>("MaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceId"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaintenanceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NextServiceDue")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NextServiceOdometer")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("OdometerReading")
                        .HasColumnType("int");

                    b.Property<string>("PerformedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShopVendor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Maintenance", (string)null);
                });

            modelBuilder.Entity("Bus_Buddy.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteId"));

                    b.Property<decimal?>("AMBeginMiles")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("AMDriverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AMEndMiles")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("AMRiders")
                        .HasColumnType("int");

                    b.Property<int?>("AMVehicleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PMBeginMiles")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("PMDriverId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PMEndMiles")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("PMRiders")
                        .HasColumnType("int");

                    b.Property<int?>("PMVehicleId")
                        .HasColumnType("int");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RouteId");

                    b.HasIndex("AMDriverId");

                    b.HasIndex("AMVehicleId");

                    b.HasIndex("PMDriverId");

                    b.HasIndex("PMVehicleId");

                    b.ToTable("Routes", (string)null);
                });

            modelBuilder.Entity("Bus_Buddy.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("AMRoute")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BusStop")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmergencyPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grade")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MedicalNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PMRoute")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ParentGuardian")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("School")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StudentNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TransportationNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("StudentId");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Bus_Buddy.Models.Activity", b =>
                {
                    b.HasOne("Bus_Buddy.Models.Driver", "Driver")
                        .WithMany("Activities")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bus_Buddy.Models.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bus_Buddy.Models.Bus", "Vehicle")
                        .WithMany("Activities")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Route");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Bus_Buddy.Models.Fuel", b =>
                {
                    b.HasOne("Bus_Buddy.Models.Bus", "Vehicle")
                        .WithMany("FuelRecords")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Bus_Buddy.Models.Maintenance", b =>
                {
                    b.HasOne("Bus_Buddy.Models.Bus", "Vehicle")
                        .WithMany("MaintenanceRecords")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Bus_Buddy.Models.Route", b =>
                {
                    b.HasOne("Bus_Buddy.Models.Driver", "AMDriver")
                        .WithMany("AMRoutes")
                        .HasForeignKey("AMDriverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bus_Buddy.Models.Bus", "AMVehicle")
                        .WithMany("Routes")
                        .HasForeignKey("AMVehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bus_Buddy.Models.Driver", "PMDriver")
                        .WithMany("PMRoutes")
                        .HasForeignKey("PMDriverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bus_Buddy.Models.Bus", "PMVehicle")
                        .WithMany()
                        .HasForeignKey("PMVehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AMDriver");

                    b.Navigation("AMVehicle");

                    b.Navigation("PMDriver");

                    b.Navigation("PMVehicle");
                });

            modelBuilder.Entity("Bus_Buddy.Models.Bus", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("FuelRecords");

                    b.Navigation("MaintenanceRecords");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("Bus_Buddy.Models.Driver", b =>
                {
                    b.Navigation("AMRoutes");

                    b.Navigation("Activities");

                    b.Navigation("PMRoutes");
                });
#pragma warning restore 612, 618
        }
    }
}
